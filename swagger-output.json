{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Demo Project - Open Api",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module. OAS3 tag above signifies the oas version.",
    "contact": {
      "email": "vishalrastogi@sharechat.co"
    }
  },
  "servers": [
    {
      "url": "http://{username}:{port}/{basePath}",
      "description": "The API server",
      "variables": {
        "username": {
          "default": "localhost",
          "description": "this value is assigned by the service provider"
        },
        "port": {
          "enum": [
            "8443",
            "443",
            "3000"
          ],
          "default": "3000"
        },
        "basePath": {
          "default": ""
        }
      }
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Endpoint to interact with User"
    }
  ],
  "paths": {
    "/test-get": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/test-post": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/test-delete/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/v1/signin": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to sign in a specific user",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username information.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v2/test-get": {
      "get": {
        "tags": [
          "test"
        ],
        "description": "endpoint to get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v2/test-post": {
      "post": {
        "tags": [
          "test"
        ],
        "description": "Endpoint to post",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/v2/test-delete/{id}": {
      "delete": {
        "tags": [
          "test"
        ],
        "description": "endpoint to delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v2/test-put/{id}": {
      "put": {
        "tags": [
          "test"
        ],
        "description": "endpoint to update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id to update"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information",
            "schema": {
              "$ref": "#/components/schemas/AddUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Parents": {
        "type": "object",
        "properties": {
          "father": {
            "type": "string",
            "example": "Simon Doe"
          },
          "mother": {
            "type": "string",
            "example": "Marie Doe"
          }
        },
        "xml": {
          "name": "Parents"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "100"
          },
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "age": {
            "type": "number",
            "example": 29
          },
          "parents": {
            "xml": {
              "name": "parents"
            },
            "$ref": "#/components/schemas/Parents"
          },
          "diplomas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "school": {
                  "type": "string",
                  "example": "XYZ University"
                },
                "year": {
                  "type": "number",
                  "example": 2020
                },
                "completed": {
                  "type": "boolean",
                  "example": true
                },
                "internship": {
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "number",
                      "example": 290
                    },
                    "location": {
                      "type": "string",
                      "example": "XYZ Company"
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "AddUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "100"
          },
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "age": {
            "type": "number",
            "example": 29
          },
          "about": {
            "type": "string",
            "example": ""
          }
        },
        "required": [
          "id",
          "name",
          "age"
        ],
        "xml": {
          "name": "AddUser"
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "description": "any description..."
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about OAS",
    "url": "https://swagger.io/specification/"
  }
}